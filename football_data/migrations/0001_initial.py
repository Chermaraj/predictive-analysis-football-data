# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-03-12 20:40
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('home_team', models.CharField(max_length=30)),
                ('away_team', models.CharField(max_length=30)),
                ('full_time_home_goals', models.PositiveSmallIntegerField()),
                ('full_time_away_goals', models.PositiveSmallIntegerField()),
                ('half_time_home_goals', models.PositiveSmallIntegerField()),
                ('half_time_away_goals', models.PositiveSmallIntegerField()),
                ('home_possession', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('away_possession', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('home_total_shots', models.PositiveSmallIntegerField()),
                ('away_total_shots', models.PositiveSmallIntegerField()),
                ('home_shots_on_target', models.PositiveSmallIntegerField()),
                ('away_shots_on_target', models.PositiveSmallIntegerField()),
                ('home_corners', models.PositiveSmallIntegerField()),
                ('away_corners', models.PositiveSmallIntegerField()),
                ('home_fouls_committed', models.PositiveSmallIntegerField()),
                ('away_fouls_committed', models.PositiveSmallIntegerField()),
                ('home_yellow_cards', models.PositiveSmallIntegerField()),
                ('away_yellow_cards', models.PositiveSmallIntegerField()),
                ('home_red_cards', models.PositiveSmallIntegerField()),
                ('away_red_cards', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DataFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, help_text='The readable name of this feature', max_length=40, null=True)),
                ('name', models.CharField(help_text='The name as it appears in the dataset', max_length=50)),
                ('column_index', models.IntegerField(help_text='The column index for this feature in the training data (1-indexed)')),
                ('is_target_feature', models.BooleanField(default=False)),
                ('data_type', models.CharField(choices=[('bool', 'Boolean'), ('float64', 'Float'), ('int64', 'Integer')], max_length=10)),
                ('positive_weight', models.NullBooleanField()),
                ('mean', models.FloatField(default=0)),
                ('std_dev', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='MachineLearningModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(choices=[('LogisticRegression', 'LogisticRegression'), ('SVM', 'SVM')], max_length=50)),
                ('training_data', models.FileField(upload_to='training_data')),
                ('target_feature_name', models.CharField(help_text='The name of the target feature column as it appears in the training data', max_length=60)),
                ('default', models.BooleanField(default=False, help_text='Is this the default model? (There can only be one)')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('full_time_home_goals', models.PositiveSmallIntegerField()),
                ('full_time_away_goals', models.PositiveSmallIntegerField()),
                ('half_time_home_goals', models.PositiveSmallIntegerField()),
                ('half_time_away_goals', models.PositiveSmallIntegerField()),
                ('full_time_result', models.CharField(choices=[('H', 'Home win'), ('D', 'Draw'), ('A', 'Away win')], max_length=1)),
                ('half_time_result', models.CharField(choices=[('H', 'Home win'), ('D', 'Draw'), ('A', 'Away win')], max_length=1)),
                ('home_possession', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('away_possession', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('home_total_shots', models.PositiveSmallIntegerField()),
                ('away_total_shots', models.PositiveSmallIntegerField()),
                ('home_shots_on_target', models.PositiveSmallIntegerField()),
                ('away_shots_on_target', models.PositiveSmallIntegerField()),
                ('home_corners', models.PositiveSmallIntegerField()),
                ('away_corners', models.PositiveSmallIntegerField()),
                ('home_fouls_committed', models.PositiveSmallIntegerField()),
                ('away_fouls_committed', models.PositiveSmallIntegerField()),
                ('home_yellow_cards', models.PositiveSmallIntegerField()),
                ('away_yellow_cards', models.PositiveSmallIntegerField()),
                ('home_red_cards', models.PositiveSmallIntegerField()),
                ('away_red_cards', models.PositiveSmallIntegerField()),
                ('training_data', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('coach', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='football_data.Coach')),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='football_data.League')),
            ],
            options={
                'ordering': ['league', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingDrill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.TextField()),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_drills', to='football_data.DataFeature')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='football_data.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='football_data.Team'),
        ),
        migrations.AddField(
            model_name='datafeature',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='football_data.MachineLearningModel'),
        ),
        migrations.AddField(
            model_name='coach',
            name='predictive_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='football_data.MachineLearningModel'),
        ),
        migrations.AddField(
            model_name='coach',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appmatch',
            name='coach',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='football_data.Coach'),
        ),
        migrations.AlterUniqueTogether(
            name='datafeature',
            unique_together=set([('model', 'column_index')]),
        ),
    ]
